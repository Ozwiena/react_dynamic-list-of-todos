{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","props","todos","selectedTodo","handleSelectTodo","className","map","todo","isSelected","id","completed","title","type","onClick","TodoFilter","setFilterType","handleInputChange","handleQueryDelete","query","value","placeholder","onChange","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","handleCloseModal","useState","selectedUser","setSelectedUser","useEffect","userId","response","href","email","name","App","setTodos","setQuery","setSelectedTodo","isTodoSelected","setIsTodoSelected","filterType","useCallback","visibleTodos","useMemo","filteredTodos","filter","queryLower","toLowerCase","trim","includes","event","target","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ca17098.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype TodoListProps = {\n  todos: Todo[];\n  selectedTodo: Todo | null,\n  handleSelectTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<TodoListProps> = (props) => {\n  const { todos, selectedTodo, handleSelectTodo } = props;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos?.map(todo => {\n          const isSelected = todo.id === selectedTodo?.id;\n\n          return (\n            <tr key={todo.id} data-cy=\"todo\" className=\"\">\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={todo.completed === false\n                  ? 'has-text-danger'\n                  : 'has-text-success'}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleSelectTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={isSelected\n                      ? 'far fa-eye-slash'\n                      : 'fas fa-eye'}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","type TodoFilterProps = {\n  setFilterType: (arg: string) => void,\n  handleInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  handleQueryDelete: () => void,\n  query: string,\n};\n\nexport const TodoFilter = (\n  {\n    setFilterType,\n    handleInputChange,\n    handleQueryDelete,\n    query,\n  }\n  : TodoFilterProps,\n) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\">\n            <option\n              value=\"all\"\n              onClick={() => setFilterType('all')}\n            >\n              All\n            </option>\n            <option\n              value=\"active\"\n              onClick={() => setFilterType('active')}\n            >\n              Active\n            </option>\n            <option\n              value=\"completed\"\n              onClick={() => setFilterType('completed')}\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleQueryDelete}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo | null,\n  handleCloseModal: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = (props) => {\n  const {\n    selectedTodo,\n    handleCloseModal,\n  } = props;\n\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId).then(response => setSelectedUser(response));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {selectedTodo?.completed === false\n                ? (\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                )\n                : (\n                  <strong className=\"has-text-success\">\n                    Done\n                  </strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | []>([]);\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isTodoSelected, setIsTodoSelected] = useState(false);\n  const [filterType, setFilterType] = useState('all');\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  const handleSelectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n    setIsTodoSelected(true);\n  };\n\n  const handleCloseModal = useCallback(() => {\n    setIsTodoSelected(false);\n    setSelectedTodo(null);\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    let filteredTodos = todos;\n\n    switch (filterType) {\n      case 'all':\n        filteredTodos = todos;\n        break;\n      case 'completed':\n        filteredTodos = todos.filter(todo => todo.completed === true);\n        break;\n      case 'active':\n        filteredTodos = todos.filter(todo => todo.completed === false);\n        break;\n      default:\n        break;\n    }\n\n    if (query) {\n      filteredTodos = filteredTodos.filter(todo => {\n        const queryLower = query.toLowerCase().trim();\n\n        return todo.title.toLowerCase().includes(queryLower);\n      });\n    }\n\n    return filteredTodos;\n  }, [filterType, todos, query]);\n\n  const handleQueryDelete = () => {\n    setQuery('');\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilterType={setFilterType}\n                query={query}\n                handleInputChange={handleInputChange}\n                handleQueryDelete={handleQueryDelete}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? <Loader />\n                : (\n                  <TodoList todos={visibleTodos} selectedTodo={selectedTodo} handleSelectTodo={handleSelectTodo} />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isTodoSelected && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          handleCloseModal={handleCloseModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}